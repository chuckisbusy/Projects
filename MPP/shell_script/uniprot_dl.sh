#! /bin/bash
# https://github.com/rnnh/bioinfo-notebook.git

# Help/usage text
usage="$(basename "$0") [-h|--help] [-p|--processors n -o|--output] -i|--input \n
\n
This script takes a list of UniProt primary accession numbers (*.list), and \n
downloads the corresponding protein sequences from UniProt as a FASTA amino \n
acid (.faa) file.\n
\n
This list can be generated by searching UniProtKB for a desired term (e.g. \n
'taxonomy:147537' for the Saccharomycotina subphylum), selecting 'Download' \n
and 'Format: List' to download the accession numbers of the corresponding \n
results.\n
\n
arguments: \n
\t    -h | --help\t\t         show this help text and exit \n
\t    -i | --input\t\t        the list of UniProt proteins to download \n
\t    -p | --processors\t     optional: set the number (n) of processors to \n
\t\t\t\t                      use (default: 1) \n
\t    -o | --output\t\t       optional: name of the output .faa file \n
\t\t\t\t                      (default: uniprot_{date}.faa) \n
"

PROCESSORS=1
OUTPUT=uniprot_$(date +%Y%m%d).faa

# Iterating through the input arguments with a while loop
while (( "$#" )); do
    case "$1" in
        -h|--help)
            echo -e $usage
            exit
            ;;
        -i|--input)
            INPUT=$2
            shift 2
            ;;
        -p|--processors)
            PROCESSORS=$2
            shift 2
            ;;
        -o|--output)
            OUTPUT=$2
            shift 2
            ;;
        --) # end argument parsing
            shift
            break
            ;;
        -*|--*) # unsupported flags
            echo -e "ERROR: $1 is an invalid option. \n" >&2
            echo -e $usage
            exit 1
            ;;
    esac
done

if test -z "$INPUT";
then
    echo -e "ERROR: No input file given. \n" >&2
    echo -e $usage
    exit 1
fi

echo "$(date +%Y/%m/%d\ %H:%M) Downloading UniProt sequences..."

echo Input file is: $INPUT
cat $INPUT | xargs -n 1 -P $PROCESSORS -I % wget -q --no-check-certificate https://www.uniprot.org/uniprot/%.fasta
cat *.fasta > $OUTPUT
cat uniprot_20250723.faa | grep "^>" | sed -e 's/|/,/g' -e 's/[^,]*,\(.*\)/\1/' > $OUTPUT.csv

echo "$(date +%Y/%m/%d\ %H:%M) Script finished."
